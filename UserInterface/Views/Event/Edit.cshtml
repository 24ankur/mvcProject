@model SharedLogic.ViewModels.EventViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit details of the Event</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.TitleOfTheBook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TitleOfTheBook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TitleOfTheBook, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StartTime", new List<SelectListItem>
                    {
                          new SelectListItem { Text = "00:00", Value = "00:00"},
                          new SelectListItem { Text = "01:00", Value = "01:00"},
                          new SelectListItem { Text = "02:00", Value = "02:00"},
                          new SelectListItem { Text = "03:00", Value = "03:00"},
                          new SelectListItem { Text = "04:00", Value = "04:00"},
                          new SelectListItem { Text = "05:00", Value = "05:00"},
                          new SelectListItem { Text = "06:00", Value = "06:00"},
                          new SelectListItem { Text = "07:00", Value = "07:00"},
                          new SelectListItem { Text = "08:00", Value = "08:00"},
                          new SelectListItem { Text = "09:00", Value = "09:00"},
                          new SelectListItem { Text = "10:00", Value = "10:00"},
                          new SelectListItem { Text = "11:00", Value = "11:00"},
                          new SelectListItem { Text = "12:00", Value = "12:00"},
                          new SelectListItem { Text = "13:00", Value = "13:00"},
                          new SelectListItem { Text = "14:00", Value = "14:00"},
                          new SelectListItem { Text = "15:00", Value = "15:00"},
                          new SelectListItem { Text = "16:00", Value = "16:00"},
                          new SelectListItem { Text = "17:00", Value = "17:00"},
                          new SelectListItem { Text = "18:00", Value = "18:00"},
                          new SelectListItem { Text = "19:00", Value = "19:00"},
                          new SelectListItem { Text = "20:00", Value = "20:00"},
                          new SelectListItem { Text = "21:00", Value = "21:00"},
                          new SelectListItem { Text = "22:00", Value = "22:00"},
                          new SelectListItem { Text = "23:00", Value = "23:00"}

                    }, "Select Start Time")
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DurationInHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DurationInHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DurationInHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InviteByEmails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InviteByEmails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InviteByEmails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
